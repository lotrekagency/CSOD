{"remainingRequest":"/home/donaldo/chatlotrekfinal/csodproject/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/donaldo/chatlotrekfinal/csodproject/frontend/src/views/MessageEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/donaldo/chatlotrekfinal/csodproject/frontend/src/views/MessageEditor.vue","mtime":1571306611514},{"path":"/home/donaldo/chatlotrekfinal/csodproject/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donaldo/chatlotrekfinal/csodproject/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/donaldo/chatlotrekfinal/csodproject/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donaldo/chatlotrekfinal/csodproject/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { apiService } from \"../common/api.service.js\";\nexport default {\n    name: \"MessageEditor\",\n\n    data() {\n      return{\n        message_body: null,\n        error: null,\n        file: ''\n      }\n    },\n\n    methods: {\n      onSubmit() {\n        if (!this.message_body) {\n            this.error = \"Il campo non può essere vuoto!\"\n        } else if (this.message_body.length > 240) {\n            this.error= \"Non superare i 240 caratteri\"\n        } else {\n          let endpoint = \"/api/messagestext/\";\n          let method = \"POST\";\n          apiService(endpoint, method, {content: this.message_body})\n              .then(message_data => {\n                  this.$router.push({\n                      name: \"message\",\n                      params: { slug: message_data.slug }\n                  });\n              });\n        }\n      },\n    },\n    created() {\n      document.title=\"Message Editor - CSOD\";\n    },\n    handleFileUpload(){\n      this.file = this.$refs.file.files[0];\n\n    }\n  };\n\n",{"version":3,"sources":["MessageEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"MessageEditor.vue","sourceRoot":"src/views","sourcesContent":["<template lang=\"html\">\n    <div class=\"container mt-2\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <h1 class=\"mb-3\">Aggiungi un messaggio</h1>\n                <form @submit.prevent=\"onSubmit\">\n                  <textarea\n                      v-model=\"message_body\"\n                      class=\"form-control\"\n                      placeholder=\"Scrivi qualcosa...\"\n                      rows=\"3\">\n                  </textarea>\n                  <label>File\n                      <input type=\"file\" id=\"file\" ref=\"file\" v-on:change=\"handleFileUpload()\"/>\n                  </label>\n                      <button v-on:click=\"submitFile()\">Submit</button>\n                  <br>\n                  <button\n                    class=\"btn btn-success\"\n                    type=\"submit\"\n                    >Invio\n                  </button>\n\n                </form>\n                <p class=\"muted error mt-2\">{{ error }}</p>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { apiService } from \"../common/api.service.js\";\nexport default {\n    name: \"MessageEditor\",\n\n    data() {\n      return{\n        message_body: null,\n        error: null,\n        file: ''\n      }\n    },\n\n    methods: {\n      onSubmit() {\n        if (!this.message_body) {\n            this.error = \"Il campo non può essere vuoto!\"\n        } else if (this.message_body.length > 240) {\n            this.error= \"Non superare i 240 caratteri\"\n        } else {\n          let endpoint = \"/api/messagestext/\";\n          let method = \"POST\";\n          apiService(endpoint, method, {content: this.message_body})\n              .then(message_data => {\n                  this.$router.push({\n                      name: \"message\",\n                      params: { slug: message_data.slug }\n                  });\n              });\n        }\n      },\n    },\n    created() {\n      document.title=\"Message Editor - CSOD\";\n    },\n    handleFileUpload(){\n      this.file = this.$refs.file.files[0];\n\n    }\n  };\n\n</script>\n\n<style lang=\"css\" scoped>\n</style>\n"]}]}
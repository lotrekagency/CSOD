{"remainingRequest":"/home/donaldo/chatlotrekfinal/csodproject/frontend/node_modules/babel-loader/lib/index.js!/home/donaldo/chatlotrekfinal/csodproject/frontend/node_modules/eslint-loader/index.js??ref--13-0!/home/donaldo/chatlotrekfinal/csodproject/frontend/src/common/csrf_token.js","dependencies":[{"path":"/home/donaldo/chatlotrekfinal/csodproject/frontend/src/common/csrf_token.js","mtime":1571044161315},{"path":"/home/donaldo/chatlotrekfinal/csodproject/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donaldo/chatlotrekfinal/csodproject/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/donaldo/chatlotrekfinal/csodproject/frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\n\n// qui scriveremo il codice necessario a permetterci di estrarre questo token\n// necessario per le richieste che non sono considerate sicure, quindi quelle richieste\n// che comportano la scrittura nel database\n// con questa funzione otteniamo questo CSRF_TOKEN che esporteremo e lo integreremo nel codice\n// che utilizzeremo per comunicare con la REST Api\nfunction getCookie(name) {\n  var cookieValue = null;\n\n  if (document.cookie && document.cookie !== '') {\n    var cookies = document.cookie.split(';');\n\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim(); // Does this cookie string begin with the name we want?\n\n      if (cookie.substring(0, name.length + 1) === name + '=') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n\n  return cookieValue;\n}\n\nvar CSRF_TOKEN = getCookie('csrftoken');\nexport { CSRF_TOKEN };",{"version":3,"sources":["/home/donaldo/chatlotrekfinal/csodproject/frontend/src/common/csrf_token.js"],"names":["getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","CSRF_TOKEN"],"mappings":";;AAAA;AACA;AACA;AAEA;AACA;AAEA,SAASA,SAAT,CAAmBC,IAAnB,EAAyB;AACrB,MAAIC,WAAW,GAAG,IAAlB;;AACA,MAAIC,QAAQ,CAACC,MAAT,IAAmBD,QAAQ,CAACC,MAAT,KAAoB,EAA3C,EAA+C;AAC3C,QAAIC,OAAO,GAAGF,QAAQ,CAACC,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,CAAd;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrC,UAAIH,MAAM,GAAGC,OAAO,CAACE,CAAD,CAAP,CAAWE,IAAX,EAAb,CADqC,CAErC;;AACA,UAAIL,MAAM,CAACM,SAAP,CAAiB,CAAjB,EAAoBT,IAAI,CAACO,MAAL,GAAc,CAAlC,MAA0CP,IAAI,GAAG,GAArD,EAA2D;AACvDC,QAAAA,WAAW,GAAGS,kBAAkB,CAACP,MAAM,CAACM,SAAP,CAAiBT,IAAI,CAACO,MAAL,GAAc,CAA/B,CAAD,CAAhC;AACA;AACH;AACJ;AACJ;;AACD,SAAON,WAAP;AACH;;AACD,IAAIU,UAAU,GAAGZ,SAAS,CAAC,WAAD,CAA1B;AAEA,SAASY,UAAT","sourcesContent":["// qui scriveremo il codice necessario a permetterci di estrarre questo token\n// necessario per le richieste che non sono considerate sicure, quindi quelle richieste\n// che comportano la scrittura nel database\n\n// con questa funzione otteniamo questo CSRF_TOKEN che esporteremo e lo integreremo nel codice\n// che utilizzeremo per comunicare con la REST Api\n\nfunction getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\nvar CSRF_TOKEN = getCookie('csrftoken');\n\nexport { CSRF_TOKEN };\n"]}]}
{"remainingRequest":"/home/donaldo/chatlotrekfinal/csodproject/frontend/node_modules/babel-loader/lib/index.js!/home/donaldo/chatlotrekfinal/csodproject/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/donaldo/chatlotrekfinal/csodproject/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/donaldo/chatlotrekfinal/csodproject/frontend/src/views/Message.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/donaldo/chatlotrekfinal/csodproject/frontend/src/views/Message.vue","mtime":1571913211861},{"path":"/home/donaldo/chatlotrekfinal/csodproject/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donaldo/chatlotrekfinal/csodproject/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/donaldo/chatlotrekfinal/csodproject/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/donaldo/chatlotrekfinal/csodproject/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/donaldo/chatlotrekfinal/csodproject/frontend/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/home/donaldo/chatlotrekfinal/csodproject/frontend/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { apiService } from \"../common/api.service\";\nimport AnswerComponent from \"../components/Answer.vue\";\nimport MessageActions from \"../components/MessageActions.vue\";\nexport default {\n  name: \"Message\",\n  props: {\n    slug: {\n      type: String,\n      required: true\n    }\n  },\n  components: {\n    AnswerComponent: AnswerComponent,\n    MessageActions: MessageActions\n  },\n  data: function data() {\n    return {\n      message: {},\n      loadingAnswers: false,\n      answers: [],\n      userHasAnswered: false,\n      showForm: false,\n      newAnswerBody: null,\n      error: null,\n      next: null,\n      requestUser: null\n    };\n  },\n  computed: {\n    isOwner: function isOwner() {\n      return this.message.author === this.requestUser;\n    },\n    notFound: function notFound() {\n      return this.message[\"detail\"];\n    }\n  },\n  methods: {\n    setPageTitle: function setPageTitle(title) {\n      document.title = title;\n    },\n    setRequestUser: function setRequestUser() {\n      this.requestUser = window.localStorage.getItem(\"username\");\n    },\n    getMessageData: function getMessageData() {\n      var _this = this;\n\n      var endpoint = \"/api/messagestext/\".concat(this.slug, \"/\");\n      apiService(endpoint).then(function (data) {\n        _this.message = data;\n        _this.userHasAnswered = data.user_has_answered;\n\n        _this.setPageTitle(data.content); //funzione per far si che il title sia uguale al contenuto del message\n\n      });\n    },\n    getMessageAnswers: function getMessageAnswers() {\n      var _this2 = this;\n\n      var endpoint = \"/api/messagestext/\".concat(this.slug, \"/answers/\");\n\n      if (this.next) {\n        endpoint = this.next;\n      }\n\n      this.loadingAnswers = true;\n      apiService(endpoint).then(function (data) {\n        var _this2$answers;\n\n        (_this2$answers = _this2.answers).push.apply(_this2$answers, _toConsumableArray(data.results));\n\n        _this2.loadingAnswers = false;\n\n        if (data.next) {\n          _this2.next = data.next;\n        } else {\n          _this2.next = null;\n        }\n      });\n    },\n    onSubmit: function onSubmit() {\n      var _this3 = this;\n\n      if (this.newAnswerBody) {\n        var endpoint = \"/api/messagestext/\".concat(this.slug, \"/answer/\");\n        apiService(endpoint, \"POST\", {\n          body: this.newAnswerBody\n        }).then(function (data) {\n          _this3.answers.unshift(data);\n        });\n        this.newAnswerBody = null;\n        this.showForm = false;\n        this.userHasAnswered = true;\n\n        if (this.error) {\n          this.error = null;\n        }\n      } else {\n        this.error = \"Il campo non pu√≤ essere vuoto!\";\n      }\n    },\n    deleteAnswer: function () {\n      var _deleteAnswer = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(answer) {\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                endpoint = \"/api/answers/\".concat(answer.id, \"/\");\n                _context.prev = 1;\n                _context.next = 4;\n                return apiService(endpoint, \"DELETE\");\n\n              case 4:\n                //this.answers.splice(this.answers.indexOf(answer), 1);\n                this.$delete(this.answers, this.answers.indexOf(answer)); // this.userHasAnswered = false;\n\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 7]]);\n      }));\n\n      function deleteAnswer(_x) {\n        return _deleteAnswer.apply(this, arguments);\n      }\n\n      return deleteAnswer;\n    }()\n  },\n  created: function created() {\n    this.getMessageData();\n    this.getMessageAnswers();\n    this.setRequestUser();\n  }\n};",{"version":3,"sources":["Message.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"html\">\n    <div class=\"single-question mt-2\">\n\n        <div v-if=\"notFound\" class=\"container\">\n            <h1 class=\"notFound\">Messaggio non trovato!</h1>\n        </div>\n        <div v-else class=\"container\">\n            <h1>{{ message.content }}</h1>\n\n            <MessageActions\n                v-if=\"isOwner\"\n                :slug=\"slug\"\n            />\n\n            <!-- <iframe> {{ message.cover }}</iframe> -->\n            <span> {{ message.cover }}</span>\n\n            <p class=\"mb-0\">Messaggio aggiunto da</p>\n                <span class=\"author_name\">{{ message.author }}</span>\n            </p>\n            <p>{{ message.created_at }}</p>\n            <hr>\n            <!-- <template v-if=\"userHasAnswered\">\n              <p class=\"answer_added\">Hai risposto a questo messaggio</p>\n            </template> -->\n            <template v-if=\"showForm\">\n              <form class=\"card\" @submit.prevent=\"onSubmit\">\n                <div class=\"card-header px-3\">\n                  Aggiungi una risposta al messaggio\n                </div>\n                <div class=\"card-block\">\n                  <textarea\n                    v-model=\"newAnswerBody\"\n                    classs=\"form-control\"\n                    placeholder=\"Aggiungi una risposta al messaggio\"\n                    rows=\"5\"\n                  ></textarea>\n                </div>\n                <div class=\"card-footer px-3\">\n                  <button type=\"submit\" class=\"btn btn-sm btn-success\">Aggiungi Risposta</button>\n                </div>\n              </form>\n              <p class=\" error mt-2\">{{ error}}</p>\n            </template>\n            <template v-else>\n              <button\n                class=\"btn btn-sm btn-success\"\n                @click=\"showForm = true\"\n                >Rispondi al messaggio</button>\n            </template>\n\n            <hr>\n            <AnswerComponent\n              v-for=\"(answer, index) in answers\"\n              :answer=\"answer\"\n              :requestUser=\"requestUser\"\n              :key=\"index\"\n              @delete-answer=\"deleteAnswer\"\n            />\n            <div class=\"my-4\">\n              <p v-show=\"loadingAnswers\">...loading...</p>\n              <button\n                 v-show=\"next\"\n                 @click=\"getMessageAnswers\"\n                 class=\"btn btn-sm btn-outline-success\"\n                 >Carica Ancora\n              </button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { apiService } from \"../common/api.service\";\nimport AnswerComponent from \"../components/Answer.vue\";\nimport MessageActions from \"../components/MessageActions.vue\";\nexport default {\n    name: \"Message\",\n\n    props: {\n        slug:{\n            type: String,\n            required: true\n        }\n    },\n\n    components: {\n        AnswerComponent,\n        MessageActions\n\n    },\n\n    data() {\n        return {\n            message: {},\n            loadingAnswers: false,\n            answers: [],\n            userHasAnswered: false,\n            showForm: false,\n            newAnswerBody: null,\n            error: null,\n            next:null,\n            requestUser:null\n        }\n    },\n\n    computed: {\n        isOwner() {\n            return this.message.author === this.requestUser;\n        },\n        notFound() {\n            return this.message[\"detail\"];\n        }\n    },\n\n    methods: {\n        setPageTitle(title) {\n            document.title= title;\n        },\n        setRequestUser() {\n            this.requestUser = window.localStorage.getItem(\"username\");\n        },\n        getMessageData() {\n            let endpoint = `/api/messagestext/${this.slug}/`;\n            apiService(endpoint)\n                .then(data => {\n                  this.message = data;\n                  this.userHasAnswered = data.user_has_answered;\n                  this.setPageTitle(data.content); //funzione per far si che il title sia uguale al contenuto del message\n                })\n        },\n        getMessageAnswers() {\n            let endpoint = `/api/messagestext/${this.slug}/answers/`;\n            if(this.next) {\n               endpoint = this.next;\n            }\n            this.loadingAnswers = true;\n            apiService(endpoint)\n                .then(data => {\n                    this.answers.push(...data.results);\n                    this.loadingAnswers = false;\n                    if (data.next) {\n                        this.next = data.next;\n                    } else {\n                      this.next = null;\n                    }\n                })\n        },\n        onSubmit() {\n          if (this.newAnswerBody) {\n              let endpoint = `/api/messagestext/${this.slug}/answer/`;\n              apiService(endpoint, \"POST\", { body: this.newAnswerBody})\n                  .then(data => {\n\n                    this.answers.unshift(data);\n                  })\n              this.newAnswerBody = null;\n              this.showForm = false;\n              this.userHasAnswered = true;\n              if(this.error) {\n                 this.error = null;\n              }\n          } else {\n              this.error = \"Il campo non pu√≤ essere vuoto!\"\n          }\n      },\n       async deleteAnswer(answer) {\n          let endpoint = `/api/answers/${answer.id}/`;\n          try{\n             await apiService(endpoint, \"DELETE\");\n             //this.answers.splice(this.answers.indexOf(answer), 1);\n             this.$delete(this.answers, this.answers.indexOf(answer))\n             // this.userHasAnswered = false;\n          }\n          catch (err) {\n             console.log(err);\n          }\n      }\n    },\n\n    created(){\n       this.getMessageData();\n       this.getMessageAnswers();\n       this.setRequestUser();\n    }\n}\n</script>\n\n<style lang=\"css\" scoped>\n\n.container{\n  margin-top: 20px;\n  margin-bottom: 5px;\n}\n.answer_added {\n  color: green;\n  font-weight: bold;\n}\n.error {\n  color: red;\n  font-weight: bold;\n}\n</style>\n"],"sourceRoot":"src/views"}]}